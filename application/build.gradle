plugins {
    id "org.springframework.boot" version "2.4.0"
}

dependencies {

    implementation project(':modulo-core')
    implementation project(':modulo-downstream')
    implementation project(':modulo-persistence')
    implementation project(':modulo-rest')
    implementation project(':modulo-security')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    testImplementation 'com.intuit.karate:karate-junit5:0.9.6'
    testImplementation 'com.intuit.karate:karate-apache:0.9.6'
}

jar {
    enabled = true
    manifest {
        attributes 'Main-Class': 'com.ioglyph.modulo.application.ModuloApplication'
    }
}

bootJar { enabled = false }

springBoot { buildInfo() }

task modules(type: Copy){
    into "$buildDir/modules/lib"
    from configurations.runtimeClasspath {
        exclude group: "jakarta.activation"
    }
}

// Setup for jlink


// Setup for functional tests
sourceSets {
    functionalTest {
        java.srcDir file('src/functional-test/java')
        resources {
            srcDir file('src/functional-test/java')
            exclude '**/*.java'
        }
        compileClasspath = sourceSets.main.output + configurations.testCompileClasspath + sourceSets.test.output
        runtimeClasspath = output + compileClasspath + configurations.testRuntimeClasspath
    }
}

task functionaltest(type: Test) {
    description = 'Runs Karate functional tests.'
    group = 'verification'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    reports.junitXml.destination = file("${reports.junitXml.destination}/functional")

    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}

